{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', {\n    staticClass: \"main\"\n  }, [_vm._m(0), _vm.showChosenCards ? _c('ChosenCards', {\n    attrs: {\n      \"threeSelectedCards\": _vm.selectedCards\n    }\n  }) : _vm._e(), _c('v-card', [_vm.currentProgress === 1 ? _c('v-card-text', {\n    staticClass: \"text-white\",\n    staticStyle: {\n      \"font-size\": \"16px\",\n      \"text-align\": \"left\"\n    }\n  }, [_vm._v(\" Welcome to Tarot Bot, your virtual tarot reader! \"), _c('br'), _c('br'), _vm._v(\" Let's get started. First, think of something to ask and enter it below. When you're ready to pick your cards, submit your query. \")]) : _vm.currentProgress === 2 ? _c('v-card-text', {\n    staticClass: \"text-white\",\n    staticStyle: {\n      \"font-size\": \"16px\",\n      \"text-align\": \"left\"\n    }\n  }, [_vm._v(\" Let's proceed. \"), _c('br'), _c('br'), _vm._v(\" Now shuffle the deck as many times as you want and select three cards. Then submit your cards to receive your reading. \"), _c('br'), _c('br'), _vm._v(\" You've selected: \" + _vm._s(_vm.selectedCardsCount) + \" / 3 cards. \")]) : _vm._e()], 1)], 1);\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticClass: \"progress-container\"\n  }, [_c('div', {\n    staticClass: \"progress\",\n    attrs: {\n      \"id\": \"progress\"\n    }\n  }), _c('div', {\n    staticClass: \"circle active\"\n  }, [_vm._v(\"1\")]), _c('div', {\n    staticClass: \"circle\"\n  }, [_vm._v(\"2\")]), _c('div', {\n    staticClass: \"circle\"\n  }, [_vm._v(\"3\")])])]);\n}];\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","staticClass","_m","showChosenCards","attrs","selectedCards","_e","currentProgress","staticStyle","_v","_s","selectedCardsCount","staticRenderFns"],"sources":["/Users/ramilorca/Desktop/Side Projects on GitHub/TarotBot2/src/components/UserPrompts.vue"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"main\"},[_vm._m(0),(_vm.showChosenCards)?_c('ChosenCards',{attrs:{\"threeSelectedCards\":_vm.selectedCards}}):_vm._e(),_c('v-card',[(_vm.currentProgress === 1)?_c('v-card-text',{staticClass:\"text-white\",staticStyle:{\"font-size\":\"16px\",\"text-align\":\"left\"}},[_vm._v(\" Welcome to Tarot Bot, your virtual tarot reader! \"),_c('br'),_c('br'),_vm._v(\" Let's get started. First, think of something to ask and enter it below. When you're ready to pick your cards, submit your query. \")]):(_vm.currentProgress === 2)?_c('v-card-text',{staticClass:\"text-white\",staticStyle:{\"font-size\":\"16px\",\"text-align\":\"left\"}},[_vm._v(\" Let's proceed. \"),_c('br'),_c('br'),_vm._v(\" Now shuffle the deck as many times as you want and select three cards. Then submit your cards to receive your reading. \"),_c('br'),_c('br'),_vm._v(\" You've selected: \"+_vm._s(_vm.selectedCardsCount)+\" / 3 cards. \")]):_vm._e()],1)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"progress-container\"},[_c('div',{staticClass:\"progress\",attrs:{\"id\":\"progress\"}}),_c('div',{staticClass:\"circle active\"},[_vm._v(\"1\")]),_c('div',{staticClass:\"circle\"},[_vm._v(\"2\")]),_c('div',{staticClass:\"circle\"},[_vm._v(\"3\")])])])\n}]\n\nexport { render, staticRenderFns }"],"mappings":"AAAA,IAAIA,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAE;EAAC,IAAIC,GAAG,GAAC,IAAI;IAACC,EAAE,GAACD,GAAG,CAACE,KAAK,CAACD,EAAE;EAAC,OAAOA,EAAE,CAAC,KAAK,EAAC;IAACE,WAAW,EAAC;EAAM,CAAC,EAAC,CAACH,GAAG,CAACI,EAAE,CAAC,CAAC,CAAC,EAAEJ,GAAG,CAACK,eAAe,GAAEJ,EAAE,CAAC,aAAa,EAAC;IAACK,KAAK,EAAC;MAAC,oBAAoB,EAACN,GAAG,CAACO;IAAa;EAAC,CAAC,CAAC,GAACP,GAAG,CAACQ,EAAE,CAAC,CAAC,EAACP,EAAE,CAAC,QAAQ,EAAC,CAAED,GAAG,CAACS,eAAe,KAAK,CAAC,GAAER,EAAE,CAAC,aAAa,EAAC;IAACE,WAAW,EAAC,YAAY;IAACO,WAAW,EAAC;MAAC,WAAW,EAAC,MAAM;MAAC,YAAY,EAAC;IAAM;EAAC,CAAC,EAAC,CAACV,GAAG,CAACW,EAAE,CAAC,oDAAoD,CAAC,EAACV,EAAE,CAAC,IAAI,CAAC,EAACA,EAAE,CAAC,IAAI,CAAC,EAACD,GAAG,CAACW,EAAE,CAAC,oIAAoI,CAAC,CAAC,CAAC,GAAEX,GAAG,CAACS,eAAe,KAAK,CAAC,GAAER,EAAE,CAAC,aAAa,EAAC;IAACE,WAAW,EAAC,YAAY;IAACO,WAAW,EAAC;MAAC,WAAW,EAAC,MAAM;MAAC,YAAY,EAAC;IAAM;EAAC,CAAC,EAAC,CAACV,GAAG,CAACW,EAAE,CAAC,kBAAkB,CAAC,EAACV,EAAE,CAAC,IAAI,CAAC,EAACA,EAAE,CAAC,IAAI,CAAC,EAACD,GAAG,CAACW,EAAE,CAAC,0HAA0H,CAAC,EAACV,EAAE,CAAC,IAAI,CAAC,EAACA,EAAE,CAAC,IAAI,CAAC,EAACD,GAAG,CAACW,EAAE,CAAC,oBAAoB,GAACX,GAAG,CAACY,EAAE,CAACZ,GAAG,CAACa,kBAAkB,CAAC,GAAC,cAAc,CAAC,CAAC,CAAC,GAACb,GAAG,CAACQ,EAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;AACp9B,CAAC;AACD,IAAIM,eAAe,GAAG,CAAC,YAAW;EAAC,IAAId,GAAG,GAAC,IAAI;IAACC,EAAE,GAACD,GAAG,CAACE,KAAK,CAACD,EAAE;EAAC,OAAOA,EAAE,CAAC,KAAK,EAAC;IAACE,WAAW,EAAC;EAAW,CAAC,EAAC,CAACF,EAAE,CAAC,KAAK,EAAC;IAACE,WAAW,EAAC;EAAoB,CAAC,EAAC,CAACF,EAAE,CAAC,KAAK,EAAC;IAACE,WAAW,EAAC,UAAU;IAACG,KAAK,EAAC;MAAC,IAAI,EAAC;IAAU;EAAC,CAAC,CAAC,EAACL,EAAE,CAAC,KAAK,EAAC;IAACE,WAAW,EAAC;EAAe,CAAC,EAAC,CAACH,GAAG,CAACW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAACV,EAAE,CAAC,KAAK,EAAC;IAACE,WAAW,EAAC;EAAQ,CAAC,EAAC,CAACH,GAAG,CAACW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAACV,EAAE,CAAC,KAAK,EAAC;IAACE,WAAW,EAAC;EAAQ,CAAC,EAAC,CAACH,GAAG,CAACW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1W,CAAC,CAAC;AAEF,SAASZ,MAAM,EAAEe,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}