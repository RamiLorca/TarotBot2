{"ast":null,"code":"const apiUrl = 'https://tarotbotbackend-production.up.railway.app/reading';\nexport const sendUserRequest = async message => {\n  try {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        model: \"text-davinci-003\",\n        prompt: message,\n        temperature: 0.7,\n        max_tokens: 2000\n      })\n    };\n    const response = await fetch(apiUrl, requestOptions);\n    const data = await response.json();\n    return data.choices[0].text;\n  } catch (error) {\n    console.error('Error while getting the tarot reading:', error);\n    throw new Error('Failed to get tarot reading.');\n  }\n};","map":{"version":3,"names":["apiUrl","sendUserRequest","message","requestOptions","method","headers","body","JSON","stringify","model","prompt","temperature","max_tokens","response","fetch","data","json","choices","text","error","console","Error"],"sources":["/Users/ramilorca/Desktop/Side Projects on GitHub/tarot-bot-2/src/services/ReadingService.js"],"sourcesContent":["const apiUrl = 'https://tarotbotbackend-production.up.railway.app/reading';\n\nexport const sendUserRequest = async (message) => {\n  try {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: \"text-davinci-003\",\n        prompt: message,\n        temperature: 0.7,\n        max_tokens: 2000,\n      }),\n    };\n\n    const response = await fetch(apiUrl, requestOptions);\n    const data = await response.json();\n    return data.choices[0].text;\n  } catch (error) {\n    console.error('Error while getting the tarot reading:', error);\n    throw new Error('Failed to get tarot reading.');\n  }\n};"],"mappings":"AAAA,MAAMA,MAAM,GAAG,2DAA2D;AAE1E,OAAO,MAAMC,eAAe,GAAG,MAAOC,OAAO,IAAK;EAChD,IAAI;IACF,MAAMC,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE,kBAAkB;QACzBC,MAAM,EAAER,OAAO;QACfS,WAAW,EAAE,GAAG;QAChBC,UAAU,EAAE;MACd,CAAC;IACH,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACd,MAAM,EAAEG,cAAc,CAAC;IACpD,MAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAC9D,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}