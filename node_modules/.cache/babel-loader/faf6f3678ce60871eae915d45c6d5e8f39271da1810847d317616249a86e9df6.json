{"ast":null,"code":"export default {\n  name: 'ChosenCards',\n  props: {\n    selectedCards: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedCards: this.selectedCards.map(card => ({\n        ...card,\n        visible: false\n      }))\n    };\n  },\n  watch: {\n    selectedCards: {\n      immediate: true,\n      handler(newCards) {\n        newCards.forEach((_, index) => {\n          setTimeout(() => {\n            this.cardOpacity[index] = 1;\n          }, index * 500);\n        });\n      }\n    }\n  },\n  mounted() {\n    this.showCardsWithDelay();\n  },\n  updated() {},\n  methods: {\n    isCardVisible(index) {\n      return this.selectedCards.slice(0, index + 1).every(card => card.visible);\n    }\n  }\n};","map":{"version":3,"names":["name","props","selectedCards","type","Array","required","data","map","card","visible","watch","immediate","handler","newCards","forEach","_","index","setTimeout","cardOpacity","mounted","showCardsWithDelay","updated","methods","isCardVisible","slice","every"],"sources":["src/components/ChosenCards.vue"],"sourcesContent":["<template>\n\n  <div class=\"main\">\n      <div class=\"chosen\">\n\n            <div v-for=\"(card, index) in selectedCards\" :key=\"card.name\" class=\"chosen-card\">\n              <div class=\"card-and-name\" v-show=\"isCardVisible(index)\">\n                <div class=\"card-name\">{{ card.name }}</div>\n                <img :src=\"card.imgUrl\" :alt=\"card.name\">\n              </div>\n            </div>\n\n      </div>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'ChosenCards',\n  props: {\n    selectedCards: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      selectedCards: this.selectedCards.map((card) => ({ ...card, visible: false })),\n    };\n  },\n  watch: {\n    selectedCards: {\n      immediate: true,\n      handler(newCards) {\n        newCards.forEach((_, index) => {\n          setTimeout(() => {\n            this.cardOpacity[index] = 1;\n          }, index * 500);\n        })\n      }\n    }\n  },\n  mounted() {\n    this.showCardsWithDelay();\n  },\n  updated() {\n    \n  },\n  methods: {\n    isCardVisible(index) {\n      return this.selectedCards.slice(0, index + 1).every((card) => card.visible);\n    },\n  },\n}\n</script>\n\n<style scoped>\n\n/* .horizontal-group {\n  display: flex;\n} */\n.main {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 20%;\n  max-width: 90%;\n  gap: 40px;\n}\n\n.chosen {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n}\n\n.chosen div img {\n  width: 80%;\n  min-height: 200px;\n  max-height: 450px;\n  background-color: rgb(189, 180, 165);\n  border-radius: 15px;\n}\n\n.chosen-card {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  transition: opacity 3s ease;\n  opacity: 0;\n  transform: translateX(-100%);\n}\n\n.chosen-card img {\n  width: 80%;\n  min-height: 200px;\n  max-height: 450px;\n  background-color: rgb(189, 180, 165);\n  border-radius: 15px;\n}\n\n.card-name {\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-family: 'EB Garamond';\n  font-weight: bold;\n  color: #d1cfd2;\n}\n\n.card-and-name {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n}\n</style>"],"mappings":"AAmBA;EACAA,IAAA;EACAC,KAAA;IACAC,aAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAJ,aAAA,OAAAA,aAAA,CAAAK,GAAA,CAAAC,IAAA;QAAA,GAAAA,IAAA;QAAAC,OAAA;MAAA;IACA;EACA;EACAC,KAAA;IACAR,aAAA;MACAS,SAAA;MACAC,QAAAC,QAAA;QACAA,QAAA,CAAAC,OAAA,EAAAC,CAAA,EAAAC,KAAA;UACAC,UAAA;YACA,KAAAC,WAAA,CAAAF,KAAA;UACA,GAAAA,KAAA;QACA;MACA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,kBAAA;EACA;EACAC,QAAA,GAEA;EACAC,OAAA;IACAC,cAAAP,KAAA;MACA,YAAAd,aAAA,CAAAsB,KAAA,IAAAR,KAAA,MAAAS,KAAA,CAAAjB,IAAA,IAAAA,IAAA,CAAAC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}