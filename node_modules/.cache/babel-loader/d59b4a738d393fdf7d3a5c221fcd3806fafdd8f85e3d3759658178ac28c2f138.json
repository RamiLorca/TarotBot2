{"ast":null,"code":"export default {\n  name: 'ChosenCards',\n  props: {\n    selectedCards: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      opacityValue: 0,\n      translateYValue: -50\n    };\n  },\n  mounted() {\n    this.increaseOpacity();\n  },\n  methods: {\n    increaseOpacity() {\n      const duration = 5000;\n      const interval = 50;\n      const steps = duration / interval;\n      let currentStep = 0;\n      const timer = setInterval(() => {\n        currentStep++;\n        this.opacityValue = currentStep / steps;\n        if (currentStep >= steps) {\n          clearInterval(timer);\n        }\n      }, interval);\n    },\n    animateAppearance() {\n      const duration = 5000;\n      const interval = 50;\n      const steps = duration / interval;\n      let currentStep = 0;\n      const timer = setInterval(() => {\n        currentStep++;\n        const t = currentStep / steps;\n        this.opacityValue = t;\n        this.translateYValue = -50 + 150 * t;\n        if (currentStep >= steps) {\n          clearInterval(timer);\n        }\n      }, interval);\n    }\n  }\n};","map":{"version":3,"names":["name","props","selectedCards","type","Array","required","data","opacityValue","translateYValue","mounted","increaseOpacity","methods","duration","interval","steps","currentStep","timer","setInterval","clearInterval","animateAppearance","t"],"sources":["src/components/ChosenCards.vue"],"sourcesContent":["<template>\n\n  <div \n    class=\"main\" \n    :style=\"{ \n      'transition-delay': `${index * 0.5}s`, \n       opacity: opacityValue }\"\n    @hook:mounted=\"increaseOpacity\"\n      >\n\n      <div class=\"chosen\">\n            <div \n              v-for=\"card in selectedCards\" \n              :key=\"card.name\" \n              class=\"chosen-card\">\n\n              <div class=\"card-and-name\" :style=\"{ opacity: opacityValue }\">\n                <div class=\"card-name\">{{ card.name }}</div>\n                <img :src=\"card.imgUrl\" :alt=\"card.name\">\n              </div>\n\n            </div>\n      </div>\n          <v-btn \n            dark \n            elevated \n            style=\"color: #161623;background-color: #d2cfd2\"\n            :disabled=\"loading\"\n            :loading=\"loading\"\n            class=\"text-none mb-4\"\n            size=\"large\"\n            variant=\"flat\" \n            @click=\"shuffleDeck\"\n          >\n            Get My Reading\n          </v-btn>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'ChosenCards',\n  props: {\n    selectedCards: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      opacityValue: 0,\n      translateYValue: -50,\n    };\n  },\n  mounted() {\n    this.increaseOpacity();\n  },\n  methods: {\n    increaseOpacity() {\n      const duration = 5000;\n      const interval = 50;\n      const steps = duration / interval;\n      let currentStep = 0;\n\n      const timer = setInterval(() => {\n        currentStep++;\n        this.opacityValue = currentStep / steps;\n\n        if(currentStep >= steps) {\n          clearInterval(timer);\n        }\n      }, interval);\n    },\n    animateAppearance() {\n      const duration = 5000;\n      const interval = 50;\n      const steps = duration / interval;\n      let currentStep = 0;\n\n      const timer = setInterval(() => {\n        currentStep++;\n        const t = currentStep / steps;\n        this.opacityValue = t;\n        this.translateYValue = -50 + 150 * t;\n\n        if (currentStep >= steps) {\n          clearInterval(timer);\n        }\n      }, interval);\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n.horizontal-group {\n  display: flex;\n}\n.main {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 20%;\n  max-width: 90%;\n  gap: 40px;\n}\n\n.chosen {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n}\n\n.chosen div img {\n  width: 80%;\n  min-height: 200px;\n  max-height: 450px;\n  background-color: rgb(189, 180, 165);\n  border-radius: 15px;\n}\n\n.chosen-card {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.chosen-card img {\n  width: 80%;\n  min-height: 200px;\n  max-height: 450px;\n  background-color: rgb(189, 180, 165);\n  border-radius: 15px;\n}\n\n.fade-in-enter-active, .fade-in-leave-active {\n  transition: opacity 1s ease, transform 1s ease;\n}\n\n.fade-in-enter, .fade-in-leave-to {\n  opacity: 1;\n  transform: translateX(0);\n}\n\n.card-name {\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-family: 'EB Garamond';\n  font-weight: bold;\n  color: #d1cfd2;\n}\n\n.card-and-name {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  gap: 10px;\n}\n</style>"],"mappings":"AA0CA;EACAA,IAAA;EACAC,KAAA;IACAC,aAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACAD,gBAAA;MACA,MAAAE,QAAA;MACA,MAAAC,QAAA;MACA,MAAAC,KAAA,GAAAF,QAAA,GAAAC,QAAA;MACA,IAAAE,WAAA;MAEA,MAAAC,KAAA,GAAAC,WAAA;QACAF,WAAA;QACA,KAAAR,YAAA,GAAAQ,WAAA,GAAAD,KAAA;QAEA,IAAAC,WAAA,IAAAD,KAAA;UACAI,aAAA,CAAAF,KAAA;QACA;MACA,GAAAH,QAAA;IACA;IACAM,kBAAA;MACA,MAAAP,QAAA;MACA,MAAAC,QAAA;MACA,MAAAC,KAAA,GAAAF,QAAA,GAAAC,QAAA;MACA,IAAAE,WAAA;MAEA,MAAAC,KAAA,GAAAC,WAAA;QACAF,WAAA;QACA,MAAAK,CAAA,GAAAL,WAAA,GAAAD,KAAA;QACA,KAAAP,YAAA,GAAAa,CAAA;QACA,KAAAZ,eAAA,eAAAY,CAAA;QAEA,IAAAL,WAAA,IAAAD,KAAA;UACAI,aAAA,CAAAF,KAAA;QACA;MACA,GAAAH,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}